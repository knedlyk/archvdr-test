# Maintainer: DonVla <donvla@users.sourceforge.net>
# Contributor: BlackEagle <ike DOT devolder AT gmail DOT com>
# Contributor: Ulf Winkelvos <ulf [at] winkelvos [dot] de>
# Contributor: Ralf Barth <archlinux dot org at haggy dot org>
# Contributor: B - Thanks for your hints :)
#
# Original credits go to Edgar Hucek <gimli at dark-green dot com>
# for his xbmc-vdpau-vdr PKGBUILD at https://archvdr.svn.sourceforge.net/svnroot/archvdr/trunk/archvdr/xbmc-vdpau-vdr/PKGBUILD

pkgname=xbmc-git
pkgver=20130203
pkgrel=1
pkgdesc="XBMC Media Center - git development version"
provides=('xbmc')
conflicts=('xbmc' 'xbmc-dharma-pvr' 'xbmc-svn')
replaces=('xbmc-svn')
arch=('i686' 'x86_64')
url="https://github.com/xbmc/xbmc"
license=('GPL' 'LGPL')
depends=('bzip2' 'faac' 'faad2' 'fribidi' 'glew' 'jasper' 'libass' 'libcdio' 'libgl' 'libmad' 'libmms' 
         'libmicrohttpd' 'libmodplug' 'libmpeg2' 'libmysqlclient' 'libsamplerate' 'libxrandr' 'libxinerama' 
         'libxtst' 'lzo2' 'sdl_image>=1.2.10' 'smbclient' 'unzip' 'wavpack' 'mesa-demos' 'xorg-xdpyinfo'
         'libva' 'rtmpdump' 'yajl' 'libssh2' 'libpulse' 'libplist' 'libnfs' 'libjpeg-turbo'
         'libcec' 'libusb' 'avahi' 'libshairport-git' 'desktop-file-utils' 'libvdpau'
         'bluez' 'tinyxml' 'taglib>=1.8')
makedepends=('boost' 'cmake' 'git' 'gperf' 'nasm' 'python2' 'zip' 'bluez' 'tinyxml' 'jdk7-openjdk' 'swig')
optdepends=('gdb: for meaningful backtraces in case of trouble - STRONGLY RECOMMENDED' 
            'lirc: remote controller support' 
            'udisks: automount external drives' 
            'upower: used to trigger suspend functionality' 
            'unrar: access compressed files without unpacking them')
options=('makeflags' '!strip')
install="${pkgname}.install"
source=('FEH.sh'
        'x11_baddrawable_workaround.patch')
md5sums=('5c09caddbf02b07c09a05bbaf7894ee6'
         '5e7b9b4151644c001da29c254e833a32')

_prefix=/usr

_gitname="xbmc"

build() {

  _gitroot="git://github.com/xbmc/xbmc.git"
  _gitid=c9accb2096d75a5e6c7af3ff5ea916c2d1defd7a

  cd "${srcdir}"
  msg "Connecting to GIT server...."

  if [ -d "${_gitname}" ] ; then
    cd "${_gitname}" 
    git checkout master
    git pull --rebase
  else
    git clone "${_gitroot}" "${_gitname}"
  fi

  if [ -d "$srcdir/$_gitname-build" ]; then
    rm -r "$srcdir/$_gitname-build"
  fi

  cp -r "$srcdir/$_gitname" "$srcdir/$_gitname-build"
  cd "$srcdir/$_gitname-build"

  git checkout "${_gitid}"

  # Configure XBMC
  cd "${srcdir}/${_gitname}-build"

  patch -p1 -i "${srcdir}/x11_baddrawable_workaround.patch" || return 1

  # fix lsb_release dependency
  sed -i -e 's:/usr/bin/lsb_release -d:cat /etc/arch-release:' xbmc/utils/SystemInfo.cpp

  # remove "--as-needed" from LDFLAGS
  unset LDFLAGS; LDFLAGS="-Wl,--hash-style=gnu"

  source /etc/profile.d/jdk.sh

  msg "Bootstrapping XBMC"
  ./bootstrap

  msg "Configuring XBMC" 
  export PYTHON_VERSION=2  # external python v2
  ./configure --prefix="${_prefix}" \
                --disable-external-libraries \
                --disable-external-ffmpeg \
                --disable-external-python \
                --enable-vdpau \
                --disable-crystalhd  \
                --enable-vaapi \
                --enable-dvdcss \
                --enable-libbluray \
                --enable-rtmp \
                --enable-webserver \
                --enable-joystick \
                --enable-xrandr \
                --enable-dvdcss \
                --enable-airtunes \
                --enable-airplay \
                --enable-optimizations \
                --enable-avahi \
                --enable-external-libcec \
                --disable-goom \
                --disable-asap-codec \
                --disable-hal \
                --enable-pulse \
                --enable-debug 

  # Now build
  msg "Running make" 
  make ${MAKEFLAGS}
}

package() {

  cd "${srcdir}/${_gitname}-build"
  msg "Running make install" 
  make prefix="${pkgdir}${_prefix}" install

# Replace FEH.py with FEH.sh (and thus remove external python dependency)
  install -D -m 0755 "${srcdir}/FEH.sh" "${pkgdir}${_prefix}/share/xbmc/FEH.sh"
  sed -i -e 's/^python \(.*\)FEH.py \(.*\)$/\1FEH.sh \2/' "${pkgdir}${_prefix}/bin/xbmc"

# lsb_release fix
  sed -i -e 's/which lsb_release &> \/dev\/null/\[ -f \/etc\/arch-release ]/g' "${pkgdir}${_prefix}/bin/xbmc"
  sed -i -e "s/lsb_release -a 2> \/dev\/null | sed -e 's\/\^\/    \/'/cat \/etc\/arch-release/g" "${pkgdir}${_prefix}/bin/xbmc"

# .desktop files
  install -D -m 0644 "${srcdir}/${_gitname}-build/tools/Linux/xbmc.desktop" "${pkgdir}${_prefix}/share/applications/xbmc.desktop"
  install -D -m 0644 "${srcdir}/${_gitname}-build/tools/Linux/xbmc-48x48.png" "${pkgdir}${_prefix}/share/pixmaps/xbmc.png"

# Tools
  install -D -m 0755 "${srcdir}/${_gitname}-build/xbmc-xrandr" "${pkgdir}${_prefix}/share/xbmc/xbmc-xrandr"
  install -D -m 0755 "${srcdir}/${_gitname}-build/tools/TexturePacker/TexturePacker" "${pkgdir}${_prefix}/share/xbmc/"

# Licenses
  install -d -m 0755 "${pkgdir}${_prefix}/share/licenses/${pkgname}" 
  for licensef in LICENSE.GPL copying.txt; do 
    mv "${pkgdir}${_prefix}/share/doc/xbmc/${licensef}" "${pkgdir}${_prefix}/share/licenses/${pkgname}" 
  done 

# Docs 
  install -d -m 0755 "${pkgdir}${_prefix}/share/doc/${pkgname}" 
  for docsf in README.linux; do 
    mv "${pkgdir}${_prefix}/share/doc/xbmc/${docsf}" "${pkgdir}${_prefix}/share/doc/${pkgname}" 
  done

# cleanup some stuff
  msg "Cleanup unneeded files"
  rm -rf "${pkgdir}/usr/share/xsessions"
  rm -f "${pkgdir}/usr/share/xbmc/FEH.py"
  rm -f "${pkgdir}/usr/share/icons/hicolor/icon-theme.cache"

# strip
  msg "Stripping binaries"
  find "${pkgdir}" -type f -exec strip {} \; >/dev/null 2>/dev/null
}
