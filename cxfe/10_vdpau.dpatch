#! /bin/sh /usr/share/dpatch/dpatch-run
## 10_vdpau.dpatch by  <gda@localhost>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad cxfe-0.9.2~/README cxfe-0.9.2/README
--- cxfe-0.9.2~/README	2007-07-25 20:40:59.000000000 +0200
+++ cxfe-0.9.2/README	2009-10-26 15:14:30.000000000 +0100
@@ -69,6 +69,7 @@
 xshm = X shared memory
 dxr3 = DXR3 Card
 fb = framebuffer
+vdpau = VDPAU hardware acceleration
 
 Tested Audio Out drivers:
 
@@ -102,6 +103,8 @@
 3,4 Increase/Decrease Brightness
 5,6 Increase/Decrease Saturation
 7,8 Increase/Decrease Hue
+9,0 Increase/Decrease Sharpness (VDPAU only)
+N,n Increase/Decrease Noise Reduction (VDPAU only)
 a   Change Aspect Ratio
 z/Z Zoom In/Out
  
@@ -173,6 +176,10 @@
 
 This will provide the best quality deinterlacing, but uses alot of CPU.
 
+The VDPAU implementation provides deinterlacing that can be enabled:
+
+tvtime:method=use_vo_driver
+
 Deinterlace settings/switches are ignored when using the DXR3 vo driver.
 DXR3 cards handle interlaced video properly without special processing.
 
diff -urNad cxfe-0.9.2~/cxfe.c cxfe-0.9.2/cxfe.c
--- cxfe-0.9.2~/cxfe.c	2007-07-25 20:40:59.000000000 +0200
+++ cxfe-0.9.2/cxfe.c	2009-10-26 15:14:30.000000000 +0100
@@ -69,7 +69,7 @@
 static int                  running = 0;
 static int		    next_mrl = FALSE;
 static int		    volume;
-static int		    vo_hue, vo_brightness, vo_saturation, vo_contrast;
+static int		    vo_hue, vo_brightness, vo_saturation, vo_contrast, vo_sharpness, vo_noise_reduction;
 static int		    lirc = 0;
 static int		    aspect = 0;
 static int		    osd_timeout = 2;
@@ -496,6 +496,50 @@
      printf("Hue:%d\n",vo_hue);
      osd_display_info("    Hue:%d\n",vo_hue);
 }
+static void increase_vo_sharpness()
+{
+#ifdef XINE_PARAM_VO_SHARPNESS
+  if (vo_sharpness < 64535){
+     vo_sharpness = vo_sharpness + 1000;
+     set_current_param(XINE_PARAM_VO_SHARPNESS, vo_sharpness);
+     }
+     printf("Sharpness:%d\n",vo_sharpness);
+     osd_display_info("    Sharpness:%d\n",vo_sharpness);
+#endif
+}
+static void decrease_vo_sharpness()
+{
+#ifdef XINE_PARAM_VO_SHARPNESS
+  if (vo_sharpness > 1000){
+     vo_sharpness = vo_sharpness - 1000;
+     set_current_param(XINE_PARAM_VO_SHARPNESS, vo_sharpness);
+     }
+     printf("Sharpness:%d\n",vo_sharpness);
+     osd_display_info("    Sharpness:%d\n",vo_sharpness);
+#endif
+}
+static void increase_vo_noise_reduction()
+{
+#ifdef XINE_PARAM_VO_NOISE_REDUCTION
+  if (vo_noise_reduction < 64535){
+     vo_noise_reduction = vo_noise_reduction + 1000;
+     set_current_param(XINE_PARAM_VO_NOISE_REDUCTION, vo_noise_reduction);
+     }
+     printf("Noise Reduction:%d\n",vo_noise_reduction);
+     osd_display_info("    Noise Reduction:%d\n",vo_noise_reduction);
+#endif
+}
+static void decrease_vo_noise_reduction()
+{
+#ifdef XINE_PARAM_VO_NOISE_REDUCTION
+  if (vo_noise_reduction > 1000){
+     vo_noise_reduction = vo_noise_reduction - 1000;
+     set_current_param(XINE_PARAM_VO_NOISE_REDUCTION, vo_noise_reduction);
+     }
+     printf("Noise Reduction:%d\n",vo_noise_reduction);
+     osd_display_info("    Noise Reduction:%d\n",vo_noise_reduction);
+#endif
+}
 static void send_event(int event)
 {
    xine_event_t xine_event;
@@ -727,6 +771,18 @@
         case 56:
                 decrease_vo_hue();
                 break;
+        case 57:
+                increase_vo_sharpness();
+                break;
+        case 48:
+                decrease_vo_sharpness();
+                break;
+        case 'N':
+                increase_vo_noise_reduction();
+                break;
+        case 'n':
+                decrease_vo_noise_reduction();
+                break;
         case 262:
         	send_event(XINE_EVENT_INPUT_NEXT);
                 break;
@@ -914,6 +970,18 @@
            case XK_8:
               decrease_vo_hue();
               break;  
+           case XK_9:
+              increase_vo_sharpness();
+              break;
+           case XK_0:
+              decrease_vo_sharpness();
+              break;
+           case XK_N:
+              increase_vo_noise_reduction();
+              break;
+           case XK_n:
+              decrease_vo_noise_reduction();
+              break;
            case XK_space:
 	     action_pause();
              break;
@@ -1108,7 +1176,7 @@
       }
     else if(!strcmp(argv[i], "--help")) {
       printf("Current command line parameters:\n");
-      printf("-vo <driver> Set video out driver (dxr3/xv/xshm/fb)\n");
+      printf("-vo <driver> Set video out driver (dxr3/xv/xshm/fb/vdpau)\n");
       printf("-ao <driver> Set audio out driver (alsa/oss)\n");
       printf("-i <driver>  Set control driver (lirc) Keyboard is enabled at all times)\n");
       printf("-fs          Start cxfe in fullscreen\n");
@@ -1136,7 +1204,7 @@
   printf("Selected Video Driver:%s\n",vo_driver);
   printf("Selected Audio Driver:%s\n",ao_driver);
   printf("Current vo plugin settings:\n");
-  printf("Hue: %d Saturation: %d Brightness: %d Contrast: %d\n",vo_hue,vo_saturation,vo_brightness,vo_contrast);
+  printf("Hue: %d Saturation: %d Brightness: %d Contrast: %d Sharpness: %d Noise Reduction: %d\n",vo_hue,vo_saturation,vo_brightness,vo_contrast,vo_sharpness,vo_noise_reduction);
   
   if (m > 0) 
   	next_mrl = TRUE;
@@ -1152,7 +1220,7 @@
 
   //printf("Length of videodriver name:%d\n",strlen(vo_driver));
 
-  if ((!strcmp(vo_driver,"xv")) || (!strcmp(vo_driver,"xshm"))) {
+  if ((!strcmp(vo_driver,"xv")) || (!strcmp(vo_driver,"xshm")) || (!strcmp(vo_driver,"vdpau"))) {
       x11=1;
   }
   else if ((!strcmp(vo_driver,"fb")) || (!strcmp(vo_driver,"dxr3"))) {
@@ -1330,7 +1398,12 @@
   vo_saturation = get_current_param(XINE_PARAM_VO_SATURATION);
   vo_contrast = get_current_param(XINE_PARAM_VO_CONTRAST);
   vo_brightness = get_current_param(XINE_PARAM_VO_BRIGHTNESS);
-
+#ifdef XINE_PARAM_VO_SHARPNESS
+  vo_sharpness = get_current_param(XINE_PARAM_VO_SHARPNESS);
+#endif
+#ifdef XINE_PARAM_VO_NOISE_REDUCTION
+  vo_noise_reduction = get_current_param(XINE_PARAM_VO_NOISE_REDUCTION);
+#endif
     
   running = 1;
 
